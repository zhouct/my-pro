<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <bean id="userService" class="com.zc.aop.service.impl.UserServiceImpl"></bean>
    <bean id="orderService" class="com.zc.aop.service.impl.OrderServiceImpl"></bean>

    <bean id="logArgsAdvice" class="com.zc.aop.advice.LogArgsAdvice"></bean>
    <bean id="logResultAdvice" class="com.zc.aop.advice.LogResultAdvice"></bean>

    <bean id="logArgsAdvisor" class="org.springframework.aop.support.RegexpMethodPointcutAdvisor">
        <property name="advice" ref="logArgsAdvice"/>
        <property name="pattern" value="com.zc.aop.service.*.create.*"/>
    </bean>

    <bean id="logResultAdvisor" class="org.springframework.aop.support.RegexpMethodPointcutAdvisor">
        <property name="advice" ref="logResultAdvice"/>
        <property name="pattern" value="com.zc.aop.service.*.query.*"/>
    </bean>

<!--    <bean id="proxyUserService" class="org.springframework.aop.framework.ProxyFactoryBean">-->
<!--        &lt;!&ndash;需要代理的类实现的接口&ndash;&gt;-->
<!--        <property name="proxyInterfaces">-->
<!--            <list>-->
<!--                <value>com.zc.aop.service.UserService</value>-->
<!--            </list>-->
<!--        </property>-->
<!--        &lt;!&ndash;需要代理的目标类&ndash;&gt;-->
<!--        <property name="target" ref="userService"/>-->

<!--        &lt;!&ndash;配置拦截器，可以使advisor，advice，intercept&ndash;&gt;-->
<!--        <property name="interceptorNames">-->
<!--            <list>-->
<!--&lt;!&ndash;                <value>logArgsAdvice</value>&ndash;&gt;-->
<!--                <value>logArgsAdvisor</value>-->
<!--&lt;!&ndash;                <value>myInterceptor</value>&ndash;&gt;-->
<!--            </list>-->
<!--        </property>-->
<!--    </bean>-->

    <bean id="myInterceptor" class="com.zc.aop.intercept.MyInterceptor"></bean>

    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"/>

</beans>